{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_resolvers/member-detailed-resolver.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/research/edit/edit.component.ts","./src/app/research/edit/edit.component.html","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_services/research.service.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/research/research-main/research-main.component.ts","./src/app/research/research-main/research-main.component.html","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { environment } from './../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.scss'],\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n        this.validationErrors = error;\n      }\n    );\n  }\n}\n","<ng-container>\n  <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n  <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n  <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n  <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 400 Validation Error</button>\n\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\"> {{error}} </li>\n    </ul>\n  </div>\n</ng-container>\n","import {\n  BsDatepickerConfig,\n  BsDatepickerModule,\n} from 'ngx-bootstrap/datepicker';\nimport { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss'],\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMMM YYYY',\n    };\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","<div class=\"form-group\">\n  <input type='text' [class.is-invalid]='ngControl.touched && ngControl.invalid'\n  class=\"form-control\" [formControl]='ngControl.control' placeholder=\"{{label}}\"\n  bsDatepicker\n  [bsConfig]='bsConfig'\n  [maxDate]='maxDate'\n  >\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>\n","import { Router } from '@angular/router';\nimport { AccountService } from './../_services/account.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)], ],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')], ],\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    // control is the confirm password field, matchTo is the password field\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value\n        ? null\n        : { isMatching: true };\n    };\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        this.validationErrors = error;\n\n      }\n    );\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr>\n\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" value=\"male\" formControlName=\"gender\"> Male\n    </label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" value=\"female\" formControlName=\"gender\" class=\"ml-3\"> Female\n    </label>\n  </div>\n  <app-text-input [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></app-text-input>\n  <app-text-input [formControl]='registerForm.controls[\"knownAs\"]' [label]='\"Known As\"'></app-text-input>\n  <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' [label]='\"Date Of Birth\"' [maxDate]='maxDate'>\n  </app-date-input>\n  <app-text-input [formControl]='registerForm.controls[\"city\"]' [label]='\"City\"'></app-text-input>\n  <app-text-input [formControl]='registerForm.controls[\"country\"]' [label]='\"Country\"'></app-text-input>\n  <app-text-input [formControl]='registerForm.controls[\"password\"]' [label]='\"Password\"' [type]='\"password\"'>\n  </app-text-input>\n  <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"'\n    [type]='\"password\"'></app-text-input>\n\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\"> {{error}} </li>\n    </ul>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n    <button class=\"btn btn-default mr-2\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</form>\n\n","import { NgForm } from '@angular/forms';\r\nimport { MessageService } from './../../_services/message.service';\r\nimport { Message } from './../../_models/message';\r\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush, // this solve the error when message is added to bottom of scrolling window\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.scss'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  loading = false;\r\n\r\n  // we set it to be public so we can access it from the HTML template\r\n  // we subscribe to the message thread in the template\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    // because we use Promise in this method, we cannot subscribe to it, instead- we use 'then'\r\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\r\n      this.messageForm.reset();\r\n    }).finally(() => this.loading = false);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\" #scrollMe style=\"overflow: scroll; height: 535px;\" [scrollTop]=\"scrollMe.scrollHeight\">\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet... say Hi by using the message box below\r\n    </div>\r\n\r\n    <ul *ngIf=\"(messageService.messageThread$ | async)?.length > 0\" class=\"chat\">\r\n      <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img class=\"rounded-circle\" src=\"{{message.senderphotoUrl || './assets/user.png'}}\" alt=\"{{message.senderUsername}}\">\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                <span class=\"text-danger\" *ngIf=\"!message.dateRead && message.senderUsername !== username\">\r\n                  (unread)\r\n                </span>\r\n                <span class=\"text-success\" *ngIf=\"message.dateRead && message.senderUsername !== username\">\r\n                  (read {{message.dateRead | timeago}})\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input name=\"messageContent\" required [(ngModel)]=\"messageContent\" type=\"text\" class=\"form-control input-sm\" placeholder=\"Send a private message\">\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!messageForm.valid || loading\" class=\"btn btn-primary\" type=\"submit\">Send\r\n            <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.scss']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" style=\"text-align: center;\">\n  <h1>Not Found</h1>\n  <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\n</div>\n","import { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1); // this is a type of observable\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n        return user;\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    user.roles=[];\n    const roles = this.getDecodedToken(user.token).role; // getting user roles from the token\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  // getting the token to know what is the role of the user\n  getDecodedToken(token) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    // must be done here in the constructor to fetch the error when redirecting to here' after that' it goes away\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal server error - refreshing the page will make the error disappear</h4>\n<ng-container *ngIf=\"error\">\n  <h5 class=\"text-danger\"> Error: {{error.Message}}</h5>\n  <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n  <p>What to do next?</p>\n  <ol>\n    <li>Open the chrome dev tool</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - nake sure it is correct</li>\n    <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n  </ol>\n  <p>Following is the stack trace=  this is where your invastigation should start!</p>\n  <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>\n","import { AccountService } from './../_services/account.service';\nimport { Directive, ViewContainerRef, TemplateRef, Input, OnInit } from '@angular/core';\nimport { map, take } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Directive({\n  selector: '[appHasRole]', // *appHasRole='[\"Admin\"]' -- when we use this directive\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[]; // this. is the array of roles that the user need to be part of in order to view the template\n  user: User;\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService)\n   {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    });\n  }\n  ngOnInit(): void {\n    // clear the view if no roles\n    if(!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333',\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  users: any;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"!registerMode\" style='text-align: center;'>\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches...all you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private accountService: AccountService) {}\n\n  // we use this interceptor to send token for the api with the Authorization it needs\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n    // 'take' make us Unsubscribe from observable after we take its value\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      currentUser = user;\n      if (currentUser) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${currentUser.token}`,\n          },\n        });\n      }\n    });\n    return next.handle(request);\n  }\n}\n","import { MessageService } from './../_services/message.service';\nimport { Pagination } from './../_models/pagination';\nimport { Message } from './../_models/message';\nimport { Component, OnInit } from '@angular/core';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loadingFlag = false;\n\n  constructor(private messageService: MessageService, private confirmService : ConfirmService) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loadingFlag = true;\n    this.messageService\n      .getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe((response) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loadingFlag = false;\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm Delete Message', 'This cannot be undone').subscribe(result => {\n      if(result) {\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(\n            this.messages.findIndex((m) => m.id === id),\n            1\n          );\n        });\n      }\n    });\n  }\n}\n","<div class=\"row mb-4\">\n  <div class=\"btn group\" name=\"container\">\n    <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n      <i class=\"fa fa-envelope\"></i>Unread\n    </button>\n    <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n      <i class=\"fa fa-envelope-open\"></i>Inbox\n    </button>\n    <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n      <i class=\"fa fa-paper-plane\"></i>Outbox\n    </button>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No Messages</h3>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n  <table class=\"table table-hover\" style=\"cursor: pointer;\">\n    <tr>\n      <th style=\"width: 40%;\">Message</th>\n      <th style=\"width: 20%;\">From / To</th>\n      <th style=\"width: 20%;\">Sent / Received</th>\n      <th style=\"width: 20%;\"></th>\n    </tr>\n    <tr [hidden]=\"loadingFlag\" *ngFor=\"let message of messages\" routerLink='{{container === \"Outbox\"\n    ? \"/members/\" + message.recipentUsername\n    : \"/members/\" + message.senderUsername}}'  [queryParams]='{tab: 3}'>\n      <td>{{message.content}}</td>\n      <td>\n        <div *ngIf=\"container === 'Outbox'\">\n          <img class=\"img-circle rounded-circle mr-2\" src=\"{{message.recipentPhotoUrl || './assets.user.png'}}\" alt=\"{{message.recipentUsername}}\">\n          <strong>{{message.recipentUsername | titlecase}}</strong>\n        </div>\n        <div *ngIf=\"container !== 'Outbox'\">\n          <img class=\"img-circle rounded-circle mr-2\" src=\"{{message.senderphotoUrl || './assets.user.png'}}\" alt=\"{{message.senderUsername}}\">\n          <strong>{{message.senderUsername | titlecase}}</strong>\n        </div>\n      </td>\n      <td>{{message.messageSent | timeago}}</td>\n      <td>\n        <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class=\"btn btn-danger\">Delete</button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ],\n})\nexport class SharedModule {}\n","import { ToastrService } from 'ngx-toastr';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(\n                error.statusText === 'OK' ? 'Unauthorised' : error.statusText,\n                error.status\n              );\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n\n            default:\n              this.toastr.error('Something Unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles,{});\n  }\n}\n","import { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AdminService } from './../../_services/admin.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss']\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe( users => {\n      this.users = users;\n    });\n  }\n\n  // activating the modal component\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent,config);// showing the modal with given initial data\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => { // subscribing to the modal input\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)] // checking for changes and updating\n      };\n      if(rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(()=>{\n          user.roles = [...rolesToUpdate.roles];\n        })\n      }\n    });\n\n  }\n\n  private getRolesArray(user: User) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] =\n     [\n      {name: 'Admin', value:'Admin'},\n      {name: 'Moderator', value:'Moderator'},\n      {name: 'Member', value:'Member'},\n     ];\n\n     availableRoles.forEach(role => {\n       let isMatch = false;\n       for(const userRole of userRoles)\n       {\n         if(role.name === userRole) {\n           isMatch = true;\n           role.checked = true;\n           roles.push(role);\n           break;\n         };\n       };\n\n       if(!isMatch) {\n         role.checked = false;\n         roles.push(role);\n       }\n     })\n     return roles;\n  }\n\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%;\">Username</th>\n      <th style=\"width: 40%;\">Active roles</th>\n      <th style=\"width: 50%;\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{user.username}}</td>\n      <td>{{user.roles}}</td>\n      <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit roles</button></td>\n    </tr>\n  </table>\n</div>\n","import { AccountService } from './../../_services/account.service';\nimport { MembersService } from './../../_services/members.service';\nimport { Member } from './../../_models/member';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NgxGalleryAnimation,\n  NgxGalleryImage,\n  NgxGalleryOptions,\n} from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { Message } from 'src/app/_models/message';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.scss'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs',{static: true}) memberTabs: TabsetComponent;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User;\n\n  constructor(\n    public presence: PresenceService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private accountService: AccountService,\n    private router: Router\n  )\n  {\n    accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    });\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n  ngOnDestroy(): void {\n    // deactivating the hub connection when user lives\n    this.messageService.stopHubConnection();\n  }\n\n  ngOnInit(): void {\n    // getting the required membber from the resolver\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n    return imageUrls;\n  }\n\n\n  loadMessages() {\n    this.messageService\n      .getMessageThread(this.member.username)\n      .subscribe((messages) => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user,this.member.username);\n    }else {\n      this.messageService.stopHubConnection();\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\n      <div class=\"card-body\">\n        <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">\n          <i class=\"fa fa-user-circle text-success\">Online now</i>\n        </div>\n        <div>\n          <strong>Location:</strong>\n          <p> {{member.city}}, {{member.country}}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p> {{member.age}}</p>\n        </div>\n        <div>\n          <strong>Last active:</strong>\n          <p> {{member.lastActive | timeago}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p> {{member.created | date:'dd MMM yyyy'}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\n        <h4>Description</h4>\n        <p>{{member.introduction}}</p>\n        <h3>Looking for</h3>\n        <p>{{member.lookingFor}}</p>\n      </tab>\n      <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\n        <h4>Interests</h4>\n        <p>{{member.interests}}</p>\n      </tab>\n      <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\n        <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n      </tab>\n      <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n\n  </div>\n\n</div>\n","import { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    // we do not need to subscribe to the currentuser observable because the guards automatically subscribs to every observable\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user) {\n          return true;\n        }\n        this.toastr.error('You shall not pass!');\n      })\n    );\n  }\n}\n","import { BusyService } from './busy.service';\r\nimport { Group } from './../_models/group';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private MessageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.MessageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder().withUrl(this.hubUrl +'message?user=' + otherUsername, {\r\n      accessTokenFactory: () => user.token\r\n    }).withAutomaticReconnect().build();\r\n\r\n    this.hubConnection.start()\r\n    .catch(error => console.log(error)).finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread',messages => {\r\n      this.MessageThreadSource.next(messages); // getting the messages to the observable\r\n    });\r\n\r\n    //adding new message to the observable array of messages\r\n    this.hubConnection.on('NewMessage',message => {\r\n      this.messageThread$.pipe(take(1)).subscribe(messages => [\r\n        this.MessageThreadSource.next([...messages,message]) // creating new array\r\n      ])\r\n    });\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if(group.connections.some(x => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          messages.forEach(message => {\r\n            if(!message.dateRead) {\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          });\r\n          this.MessageThreadSource.next([...messages]);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if(this.hubConnection) {\r\n      this.MessageThreadSource.next([]); // clearing the messages when disconnecting so if other user get in it wont be shown for 1 second\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    // this returns a promise\r\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { take } from 'rxjs/operators';\nimport { AccountService } from './../../_services/account.service';\nimport { UserParams } from './../../_models/userParams';\nimport { Observable } from 'rxjs';\nimport { MembersService } from './../../_services/members.service';\nimport { Member } from './../../_models/member';\nimport { Component, OnInit } from '@angular/core';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(private memberService: MembersService, private accountService: AccountService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your Matches - {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label>Age from: </label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\n    </div>\n    <div class=\"form-group px-2\">\n      <label>Age to: </label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label>Show: </label>\n      <select name=\"gender\" style=\"width: 130px;\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">{{gender.display}}</option>\n      </select>\n    </div>\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button class=\"btn btn-info ml-1\" type=\"submit\" (click)=\"resetFilters()\">Reset Filters</button>\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button class=\"btn btn-primary\" type=\"button\" name=\"orderBy\" [(ngModel)]=\"userParams.orderBy\"\n          (click)=\"loadMembers()\" btnRadio=\"lastActive\">Last Active</button>\n\n        <button class=\"btn btn-primary\" type=\"button\" name=\"orderBy\" [(ngModel)]=\"userParams.orderBy\"\n          (click)=\"loadMembers()\" btnRadio=\"created\">Newest Members</button>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n<div class=\"row\">\n  <div *ngFor=\"let member of members\" class=\"col-2\">\n    <p>\n      <app-member-card [member]=\"member\"></app-member-card>\n    </p>\n  </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { PresenceService } from './_services/presence.service';\nimport { AccountService } from './_services/account.service';\nimport { User } from './_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n  users: any;\n\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if(user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user); // starting the SignalR hub connection\n    }\n  }\n}\n","<ngx-spinner>\n  <h3>Loading ...</h3>\n</ngx-spinner>\n<app-nav></app-nav>\n<div class=\"container\" style=\"margin-top: 100px;\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member>{\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","import { BusyService } from './../_services/busy.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(private busyService: BusyService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { ResearcherResearch } from './../../_models/researcherResearch';\nimport { ToastrService } from 'ngx-toastr';\nimport { ResearchService } from './../../_services/research.service';\nimport { Researcher } from './../../_models/researcher';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Research } from 'src/app/_models/research';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss'],\n})\nexport class EditComponent implements OnInit {\n  researcher: Researcher;\n  researchToDelete: Research;\n  researchesAssignedTo: Research[];\n\n  @ViewChild('editForm') editForm: NgForm;\n\n  constructor(private resService: ResearchService, private toastr: ToastrService) {}\n\n  ngOnInit(): void {\n    if (!this.researcher){\n      this.researcher = this.resService.researcher = JSON.parse(localStorage.getItem('currentResearcher'));\n    }\n    console.log('hey: ' + this.researcher.firstname );\n    this.resService.getResearchesByResearcherId(this.researcher.id).subscribe(res => {\n      this.researchesAssignedTo = res;\n    });\n  }\n\n  update() {\n    this.resService.updateResearcher(this.researcher).subscribe(() => {\n      this.toastr.success('Profile updated successfuly!');\n      // we reset the form state but keeps the updated values of the member\n      this.editForm.reset(this.researcher);\n    });\n}\n\nchosenResearchToDelete(research: Research) {\n this.researchToDelete = research;\n}\n\ndeleteResearch() {\n const res: ResearcherResearch  =\n {researcherId: this.researcher.id, researchId: this.researchToDelete.id};\n this.resService.deleteResearcherFromResearch(res).subscribe();\n\n this.researchesAssignedTo = this.researchesAssignedTo.filter(val => val !== this.researchToDelete);\n\n this.researchToDelete = null;\n}\n}\n","<div class=\"row\" *ngIf=\"researcher\">\n  <div class=\"col-4\">\n    <h1>Your Profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <!--'edirForm' is the id of the form, so we can get inside it and check if it got dirty-->\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n      <strong>Information: </strong> You have made changes. Any unsaved changes will be lost\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img src=\"{{'./assets/user.png'}}\" alt=\"{{researcher.firstname}}\" class=\"card-img-top img-thumbnail\">\n      <div class=\"card-body\">\n\n      </div>\n      <div class=\"card-footer\">\n        <!--the ' form=\"editForm\" ' property is to hook this button to the form below by it's id property-->\n        <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save\n          Changes</button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading='About {{researcher.firstname}}'>\n        <form style=\"display: inline-flex;\" #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"update()\">\n          <div class=\"form-inline\">\n            <label for=\"firstname\">First Name:</label>\n            <input [(ngModel)]=\"researcher.firstname\" type=\"text\" name=\"firstname\" class=\"form-control mx-2\">\n            <label for=\"lastname\">Last Name:</label>\n            <input [(ngModel)]=\"researcher.lastname\" type=\"text\" name=\"lastname\" class=\"form-control mx-2\">\n          </div>\n          <div class=\"form-inline\">\n            <label for=\"city\">Email:</label>\n            <input [(ngModel)]=\"researcher.email\" type=\"text\" name=\"email\" class=\"form-control mx-2\">\n            <label for=\"city\">Phone:</label>\n            <input [(ngModel)]=\"researcher.phone\" type=\"text\" name=\"phone\" class=\"form-control mx-2\">\n          </div>\n          <div class=\"form-inline\">\n            <div class=\"btn-group\" dropdown>\n              <button id=\"button-animated\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\"\n                aria-controls=\"dropdown-animated\">\n                Researches assigned to <span class=\"caret\"></span>\n              </button>\n              <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\"\n                aria-labelledby=\"button-animated\">\n                <li role=\"menuitem\" *ngFor=\"let research of researchesAssignedTo\">\n                  <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"chosenResearchToDelete(research)\">{{research.name}}, {{research.university}}</a>\n                </li>\n              </ul>\n            </div>\n            <div class=\"form-inline\" *ngIf=\"researchToDelete\">\n              <label>\n                <strong>Chosen :</strong> {{researchToDelete.name}}\n              </label>\n              <button type=\"button\" class=\"btn btn-warning\" (click)=\"deleteResearch()\">Delete researcher from this\n                research?</button>\n            </div>\n          </div>\n        </form>\n      </tab>\n    </tabset>\n\n  </div>\n\n</div>\n","import { UserParams } from './../_models/userParams';\nimport { PaginatedResult } from './../_models/pagination';\nimport { Member } from './../_models/member';\nimport { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AccountService } from './account.service';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  user: User;\n  userParams: UserParams;\n  //for storing cache for requests\n  memberCache = new Map();\n\n  constructor(\n    private http: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    });\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(userParams: UserParams) {\n    this.userParams = userParams;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n  getMembers(userParams: UserParams) {\n    // check if the cache has already this king of call of user params\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(\n      userParams.pageNumber,\n      userParams.pageSize\n    );\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n    return getPaginatedResult<Member[]>(\n      this.baseUrl + 'users',\n      params, this.http\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      })\n    );\n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.username === username);\n    if (member) {\n      return of(member);\n    }\n\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    );\n  }\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber, PageSize) {\n    let params = getPaginationHeaders(pageNumber, PageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n\n\n}\n","import { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { ResearchMainComponent } from './research/research-main/research-main.component';\r\nimport { EditComponent } from './research/edit/edit.component';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    ResearchMainComponent,\r\n    EditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { MembersService } from './../../_services/members.service';\nimport { take } from 'rxjs/operators';\nimport { AccountService } from './../../_services/account.service';\nimport { environment } from './../../../environments/environment';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { Photo } from 'src/app/_models/photo';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.scss'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(event: any) {\n    this.hasBaseDropZoneOver = event;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach((p) => {\n        if (p.isMain) p.isMain = false;\n        if (p.id === photo.id) p.isMain = true;\n      });\n    });\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter((x) => x.id !== photoId);\n    });\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if (photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n    <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n    <div class=\"text-center\">\n      <button [disabled]=\"photo.isMain\" (click)=\"setMainPhoto(photo)\"\n        [ngClass]='photo.isMain ? \"btn-succes active\" : \"btn-outline-success\"' class=\"btn btn-sm\">Main</button>\n      <button  [disabled]=\"photo.isMain\" (click)=(deletePhoto(photo.id)) class=\"btn btn-danger\"><i class=\"fa fa-trash\"></i></button>\n    </div>\n  </div>\n</div>\n<div class=\"row mt-3\">\n\n  <div class=\"col-md-3\">\n\n    <h3>Add photos</h3>\n\n    <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop photos here\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n          <!-- <th>Progress</th>\n          <th>Status</th>\n          <th>Actions</th>\n         -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td><strong>{{ item?.file?.name }}</strong></td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          <!-- <td *ngIf=\"uploader.options.isHTML5\">\n            <div class=\"progress\" style=\"margin-bottom: 0;\">\n              <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n            </div>\n          </td> -->\n          <td class=\"text-center\">\n            <span *ngIf=\"item.isSuccess\"><i class=\"glyphicon glyphicon-ok\"></i></span>\n            <span *ngIf=\"item.isCancel\"><i class=\"glyphicon glyphicon-ban-circle\"></i></span>\n            <span *ngIf=\"item.isError\"><i class=\"glyphicon glyphicon-remove\"></i></span>\n          </td>\n          <!-- <td nowrap>\n            <button type=\"button\" class=\"btn btn-success btn-xs\" (click)=\"item.upload()\"\n              [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n              <span class=\"glyphicon glyphicon-upload\"></span> Upload\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-xs\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\">\n              <span class=\"glyphicon glyphicon-ban-circle\"></span> Cancel\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-xs\" (click)=\"item.remove()\">\n              <span class=\"glyphicon glyphicon-trash\"></span> Remove\n            </button>\n          </td> -->\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress\" style=\"\">\n          <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n        [disabled]=\"!uploader.getNotUploadedItems().length\">\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n        [disabled]=\"!uploader.isUploading\">\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n        [disabled]=\"!uploader.queue.length\">\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n\n  </div>\n\n</div>\n","import { ResearcherResearch } from './../_models/researcherResearch';\nimport { Researcher } from './../_models/researcher';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { Research } from '../_models/research';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResearchService {\n  baseUrl = environment.apiUrl;\n  researchers: Researcher[] = [];\n  researches: Research[] = [];\n  researcher: Researcher;\n\n  constructor(private http: HttpClient) {}\n\n  getResearchers() {\n    return this.http\n      .get<Researcher[]>(this.baseUrl + 'research/researchers')\n      .pipe(\n        map((researchers) => {\n          this.researchers = researchers;\n          console.log(this.researchers[0].firstname);\n          return researchers;\n        })\n      );\n  }\n\n  getResearchersByResearchId(id: number) {\n    return this.http\n      .get<Researcher[]>(this.baseUrl + 'research/researchers/' + id)\n      .pipe(\n        map((researchers) => {\n          this.researchers = researchers;\n          return researchers;\n        })\n      );\n  }\n\n  getResearches() {\n    return this.http.get<Research[]>(this.baseUrl + 'research/researches').pipe(\n      map((researches) => {\n        this.researches = researches;\n        return researches;\n      })\n    );\n  }\n\n  getResearchesByResearcherId(id: number) {\n    return this.http\n      .get<Research[]>(this.baseUrl + 'research/researches/' + id)\n      .pipe(\n        map((researches) => {\n          this.researches = researches;\n          return researches;\n        })\n      );\n  }\n\n  setResearcher(res: Researcher) {\n    this.researcher = res;\n  }\n\n  updateResearcher(res: Researcher) {\n    return this.http\n      .put(this.baseUrl + 'research/researchers/updateresearcher', res)\n      .pipe(\n        map(() => {\n          const index = this.researchers.indexOf(res);\n          this.researchers[index] = res;\n        })\n      );\n  }\n\n  deleteResearcher(re: Researcher) {\n    return this.http.post<Researcher>(this.baseUrl + 'research/researchers/deleteresearcher', re).pipe(res => {\n        return res;\n    });\n  }\n\n  deleteResearcherFromResearch(re: ResearcherResearch) {\n    return this.http.post(this.baseUrl + 'research/researchers/deletefromresearch', re).pipe();\n  }\n  addResearcher(re: Researcher) {\n    return this.http.post<Researcher>(this.baseUrl + 'research/researchers/addresearcher', re).pipe( res => {\n      return res;\n    });\n  }\n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n\n  registerOnChange(fn: any): void {}\n\n  registerOnTouched(fn: any): void {}\n\n  setDisabledState?(isDisabled: boolean): void {\n    throw new Error('Method not implemented.');\n  }\n}\n","<div class=\"form-group\">\n  <input [class.is-invalid]=\"ngControl.touched && ngControl.invalid\" type={{type}} class=\"form-control\"\n    [formControl]=\"ngControl.control\" placeholder={{label}}>\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a\n    {{label}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n    {{label}} must be at least {{ngControl.errors.minlength['requiredLength']}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n    {{label}} must be max of {{ngControl.errors.maxlength['requiredLength']}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n    Passwords do not match\n  </div>\n</div>\n","import { Pagination } from 'src/app/_models/pagination';\nimport { MembersService } from './../_services/members.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.scss'],\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) {}\n\n  ngOnInit(): void {\n    this.loadlikes();\n  }\n\n  loadlikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadlikes();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{predicate === 'liked'? 'Members Ilike' : 'Members who liked me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"btn-group\" name=\"predicate\">\n      <button class=\"btn btn-primary\" btnRadio=\"liked\" [(ngModel)]=\"predicate\" (click)=\"loadlikes()\">Members I\n        like</button>\n      <button class=\"btn btn-primary\" btnRadio=\"likedBy\" [(ngModel)]=\"predicate\" (click)=\"loadlikes()\">Members who liked me</button>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-2\" *ngFor=\"let member of members\">\n      <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { AccountService } from './../_services/account.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\nimport { Toast, ToastrModule, ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  collapsed: boolean = false;\r\n\r\n  constructor(public accountService: AccountService, private router: Router, private toastr: ToastrService) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login() {\r\n    this.accountService.login(this.model).subscribe(\r\n      (response) => {\r\n        this.router.navigateByUrl('/members');\r\n        this.collapsed = false;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.toastr.error(error.error);\r\n      }\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.collapsed = false;\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  navCollapse() {\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\r\n    <!--this is for responsive hamburger, NEED TO GET IT WORK LATER BY PRESSING ON HAMBURGER-->\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n      aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"navCollapse()\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div [ngClass]=\"collapsed? 'collapse show navbar-collapse' : 'collapse  navbar-collapse'\" id=\"navbarCollapse\">\r\n      <ul [ngClass]=\"collapsed? 'navbar-nav mr-auto mt-2 mt-lg-0' :'navbar-nav mr-auto'\">\r\n\r\n        <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Matches</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link \" routerLink='/messages' routerLinkActive='active'>Messages</a>\r\n          </li>\r\n          <li *appHasRole='[\"Admin\",\"Moderator\"]' class=\"nav-item\">\r\n            <a class=\"nav-link \" routerLink='/admin' routerLinkActive='active'>Admin</a>\r\n          </li>\r\n        </ng-container>\r\n      </ul>\r\n\r\n      <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n        <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\r\n        <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n        <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n          <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\" (ngSubmit)= \"login()\" autocomplete=\"off\">\r\n        <input name=\"username\" [(ngModel)]=\"model.username\" class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Username\">\r\n        <input name=\"password\" [(ngModel)]=\"model.password\" class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\">\r\n        <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</nav>\r\n","import { PresenceService } from './../../_services/presence.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MembersService } from './../../_services/members.service';\nimport { Member } from './../../_models/member';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.scss'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(\n    private memberService: MembersService,\n    private toastr: ToastrService,\n    public presence: PresenceService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  addLike(member: Member) {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    });\n  }\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}' class=\"btn btn-primary\"><i\n            class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"addLike(member)\"><i\n            class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button routerLink=\"/members/{{member.username}}\" [queryParams]='{tab: 3}'\n          class=\"btn btn-primary\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\">\n      <!--subscribing to hub listener with online users list-->\n      <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\n      <i class=\"fa fa-user mr-2\"></i>\n    </span>\n      {{member.knownAs}}, {{member.age}}</h6>\n    <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n  </div>\n</div>\n","import { Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n    .withUrl(this.hubUrl + 'presence',\n    {\n     accessTokenFactory: () => user.token\n    })\n    .withAutomaticReconnect()\n    .build();\n\n    // starting the hub service\n    this.hubConnection.start().catch(error => console.log(error));\n\n    // listening to new connection of other users, the info comes from the api 'PresenceHub'\n    this.hubConnection.on('UserIsOnline',username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames,username])\n      })\n    });\n\n    this.hubConnection.on('UserIsOffline',username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    });\n\n    this.hubConnection.on('GetOnlineUsers',(usernames: string[]) => {\n      this.onlineUsersSource.next(usernames); // updating the observable with current online user list\n    });\n\n    this.hubConnection.on('NewMessageReceived',({username,knownAs}) => {\n      this.toastr.info(knownAs + ' has sent you a new message!')\n      .onTap\n      .pipe(take(1)).subscribe(()=> this.router.navigateByUrl('/members/' +username + '?tab=3')); // take the user to the tab of messages of sender user\n    });\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n}\n}\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  orderBy = 'lastActive';\r\n\r\n  constructor(user: User) {\r\n    this.gender = user.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin panel</h2>\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"User management\" *appHasRole='[\"Admin\"]'>\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading=\"Photo management\" *appHasRole='[\"Admin\",\"Moderator\"]'>\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { ToastrService } from 'ngx-toastr';\nimport { MembersService } from './../../_services/members.service';\nimport { User } from './../../_models/user';\nimport { AccountService } from './../../_services/account.service';\nimport { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { take } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.scss'],\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  member: Member;\n  user: User;\n\n  // using this to confirm if user try to get out of application withput saving the form changes\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if(this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService,\n    private toastr: ToastrService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe((member) => {\n      this.member = member;\n    });\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() =>{\n      this.toastr.success('Profile updated successfuly!');\n      // we reset the form state but keeps the updated values of the member\n      this.editForm.reset(this.member);\n    });\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n  <div class=\"col-4\">\n    <h1>Your Profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <!--'edirForm' is the id of the form, so we can get inside it and check if it got dirty-->\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n      <strong>Information: </strong> You have made changes. Any unsaved changes will be lost\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\n      <div class=\"card-body\">\n        <div>\n          <strong>Location:</strong>\n          <p> {{member.city}}, {{member.country}}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p> {{member.age}}</p>\n        </div>\n        <div>\n          <strong>Last active:</strong>\n          <p> {{member.lastActive | timeago}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p> {{member.created | date: 'dd MMM yyyy'}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <!--the ' form=\"editForm\" ' property is to hook this button to the form below by it's id property-->\n        <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading='About {{member.knownAs}}'>\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n          <h4>Description</h4>\n          <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n          <h4 class=\"mt-2\">Looking for</h4>\n          <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n          <h4 class=\"mt-2\">Location Details:</h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City:</label>\n            <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n            <label for=\"city\">Country:</label>\n            <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n          </div>\n        </form>\n\n      </tab>\n      <tab heading='Edit Photos'>\n\n        <app-photo-editor [member] = \"member\" ></app-photo-editor>\n      </tab>\n\n    </tabset>\n\n  </div>\n\n</div>\n","import { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url: string, params: HttpParams, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http\r\n    .get<T>(url, { observe: 'response', params })\r\n    .pipe(\r\n      map((response) => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(\r\n            response.headers.get('Pagination')\r\n          );\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { ConfirmService } from './../_services/confirm.service';\nimport { MemberEditComponent } from './../members/member-edit/member-edit.component';\nimport { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService : ConfirmService) {}\n\n  // root guard automatically subscribe so we do not need to subscribe menually\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: Boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n</div>\n","import { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed-resolver';\r\nimport { Researcher } from './_models/researcher';\r\nimport { EditComponent } from './research/edit/edit.component';\r\nimport { ResearchMainComponent } from './research/research-main/research-main.component';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent },\r\n      { path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\r\n      { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard] },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'admin', component: AdminPanelComponent ,canActivate: [AdminGuard]},\r\n    ],\r\n  },\r\n\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: 'server-error', component: ServerErrorComponent },\r\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { Researcher } from './../../_models/researcher';\r\nimport { ResearchService } from './../../_services/research.service';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { Research } from 'src/app/_models/research';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-research-main',\r\n  templateUrl: './research-main.component.html',\r\n  styleUrls: ['./research-main.component.scss'],\r\n})\r\nexport class ResearchMainComponent implements OnInit {\r\n  researchers: Researcher[] = [];\r\n  researches: Research[] = [];\r\n  modalRef: BsModalRef;\r\n  researcher: Researcher = {\r\n    firstname: 'First Name',\r\n    lastname: 'Last Name',\r\n    email: 'Email',\r\n    phone: 'Phone',\r\n  };\r\n  show = false;\r\n\r\n  constructor(\r\n    private resService: ResearchService,\r\n    private router: Router,\r\n    private modalService: BsModalService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.resService.getResearchers().subscribe((researchers) => {\r\n      this.researchers = researchers;\r\n    });\r\n\r\n    this.resService.getResearches().subscribe((researches) => {\r\n      this.researches = researches;\r\n    });\r\n  }\r\n\r\n  setCurrentResearcher(res: Researcher) {\r\n    localStorage.setItem('currentResearcher', JSON.stringify(res));\r\n    this.resService.setResearcher(res);\r\n    console.log(res.lastname);\r\n    this.router.navigateByUrl('research/edit-researcher');\r\n  }\r\n\r\n  addResearcher() {\r\n    this.resService.addResearcher(this.researcher).subscribe((res) => {\r\n      this.toastr.success('Researcher added!');\r\n      this.researchers.push(this.researcher);\r\n      this.modalService.hide();\r\n    });\r\n  }\r\n\r\n  deleteResearcher(res: Researcher) {\r\n    this.resService.deleteResearcher(res).subscribe(response => {\r\n      this.researchers = this.researchers.filter(r => r.id !== res.id);\r\n      this.toastr.success('Researcher deleted successfuly');\r\n    });\r\n\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n}\r\n","<div>\r\n  <tabset>\r\n    <tab heading=\"Researchers\" id=\"tab1\">\r\n      <div class=\"col-2\" style=\"padding: 5px;\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Add new researcher</button>\r\n        <!-- adding new researcher-->\r\n        <ng-template style=\"width: fit-content !important;\" #template>\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title pull-left\">Adding new Researcher</h4>\r\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form style=\"display: table-caption;\" #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"addResearcher()\">\r\n              <div class=\"form-inline\">\r\n                <label for=\"firstname\">First Name:</label>\r\n                <input [(ngModel)]=\"researcher.firstname\" type=\"text\" name=\"firstname\" class=\"form-control mx-2\">\r\n                <label for=\"lastname\">Last Name:</label>\r\n                <input [(ngModel)]=\"researcher.lastname\" type=\"text\" name=\"lastname\" class=\"form-control mx-2\">\r\n              </div>\r\n              <div class=\"form-inline\">\r\n                <label for=\"city\">Email:</label>\r\n                <input [(ngModel)]=\"researcher.email\" type=\"text\" name=\"email\" class=\"form-control mx-2\">\r\n                <label for=\"city\">Phone:</label>\r\n                <input [(ngModel)]=\"researcher.phone\" type=\"text\" name=\"phone\" class=\"form-control mx-2\">\r\n              </div>\r\n              <div class=\"form-inline\">\r\n                <!--the ' form=\"editForm\" ' property is to hook this button to the form below by it's id property-->\r\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\"\r\n                  class=\"btn btn-success btn-block\">ADD</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <div *ngFor=\"let researcher of researchers\" class=\"card mb-4\">\r\n          <div class=\"card-img-wrapper\">\r\n            <label style=\"margin-left: 20%;\">{{researcher.firstname }} {{researcher.lastname}}</label>\r\n            <img src=\"{{'./assets/user.png'}}\" alt=\"{{researcher.firstname}}\" class=\"card-img-top\">\r\n            <ul class=\"list-inline member-icons animate text-center\">\r\n              <li class=\"list-inline-item\"><button type=\"button\" class=\"btn btn-primary\"\r\n                  (click)='setCurrentResearcher(researcher)'><i class=\"fa fa-user\"></i></button></li>\r\n              <li class=\"list-inline-item\"><button type=\"button\" class=\"btn btn-primary\" (click)=\"deleteResearcher(researcher)\"><i\r\n                    class=\"fa fa-trash\"></i></button></li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"card-body p-1\">\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </tab>\r\n    <tab heading=\"Researches\">\r\n      <h1 *ngFor=\"let research of researches\">{{research.name}}</h1>\r\n    </tab>\r\n  </tabset>\r\n</div>\r\n","import { observable, Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from './../modals/confirm-dialog/confirm-dialog.component';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModelRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\n        observer.next(this.bsModelRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n}\n","import { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.scss']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles); //sending the list of roles, even though it is an input property\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input type=\"checkbox\"\n            class=\"form-check-input\"\n            [checked]=\"role.checked\"\n            (change)=\"role.checked = !role.checked\"\n            [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n            >\n            <label>{{role.name}}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}